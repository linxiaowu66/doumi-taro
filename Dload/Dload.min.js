/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ajax__ = __webpack_require__(2);

// import config from '../config'

var pkg = __webpack_require__(3);

// var env = process.env.NODE_ENV
var env = "qa1"

var host = '//assets.dianwoda.cn/'

var path = pkg.name + '/' + env

var webpackAssets = {
  development: '//192.168.100.194:9100/webpack-assets.json',
  qa: host + path + '/assets.json?v=' + new Date().getTime(),
  qa1: host  + path + '/assets.json?v=' + new Date().getTime(),
  // qa2: `//assets.dianwoda.cn/${pkg.name}/qa2/assets.json`,
  qa3: host  + path + '/assets.json?v=' + new Date().getTime(),
  prod: host + path + '/assets.json?v=' + pkg.version
}[env];

var protocol = location.protocol;

function loadStyle(href) {
  var link = document.createElement('link');
  link.rel = 'stylesheet';
  link.href = href;
  document.body.appendChild(link);
}

function loadScript(src, options, cb) {
  var script = document.createElement('script');
  for (var opt in options) {
    script.setAttribute(opt, options[opt]);
  }
  script.onload = function () {
    cb && cb();
  }
  script.src = src;
  document.body.appendChild(script);
}

function loadAsserts() {
  Object(__WEBPACK_IMPORTED_MODULE_0__ajax__["a" /* default */])({
    url: webpackAssets,
    success: function(res) {
      var result = JSON.parse(res);
      var styles = result.css;
      var javascripts = result.js;
      if (styles) {
        loadStyle(host + styles);
      }
      if (javascripts) {
        loadScript(host + javascripts, {
          defer: true
        })
      }
    },
    error: function(err) {
      console.log(err)
    }
  })
}
loadAsserts();


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = ajax;
function ajax(options) {
  //编码数据
  function setData() {
    //设置对象的遍码
    function setObjData(data, parentName) {
      function encodeData(name, value, parentName) {
        var items = [];
        name = parentName === undefined ? name : parentName + "[" + name + "]";
        if (typeof value === "object" && value !== null) {
          items = items.concat(setObjData(value, name));
        } else {
          name = encodeURIComponent(name);
          value = encodeURIComponent(value);
          items.push(name + "=" + value);
        }
        return items;
      }
      var arr = [],
        value;
      if (Object.prototype.toString.call(data) == '[object Array]') {
        for (var i = 0, len = data.length; i < len; i++) {
          value = data[i];
          arr = arr.concat(encodeData(typeof value == "object" ? i : "", value, parentName));
        }
      } else if (Object.prototype.toString.call(data) == '[object Object]') {
        for (var key in data) {
          value = data[key];
          arr = arr.concat(encodeData(key, value, parentName));
        }
      }
      return arr;
    };
    //设置字符串的遍码，字符串的格式为：a=1&b=2;
    function setStrData(data) {
      var arr = data.split("&");
      for (var i = 0, len = arr.length; i < len; i++) {
        name = encodeURIComponent(arr[i].split("=")[0]);
        value = encodeURIComponent(arr[i].split("=")[1]);
        arr[i] = name + "=" + value;
      }
      return arr;
    }

    if (data) {
      if (typeof data === "string") {
        data = setStrData(data);
      } else if (typeof data === "object") {
        data = setObjData(data);
      }
      data = data.join("&").replace("/%20/g", "+");
      //若是使用get方法或JSONP，则手动添加到URL中
      if (type === "get" || dataType === "jsonp") {
        url += url.indexOf("?") > -1 ? (url.indexOf("=") > -1 ? "&" + data : data) : "?" + data;
      }
    }
  }
  // JSONP
  function createJsonp() {
    var script = document.createElement("script"),
      timeName = new Date().getTime() + Math.round(Math.random() * 1000),
      callback = "JSONP_" + timeName;

    window[callback] = function (data) {
      clearTimeout(timeout_flag);
      document.body.removeChild(script);
      success(data);
    }
    script.src = url + (url.indexOf("?") > -1 ? "&" : "?") + "callback=" + callback;
    script.type = "text/javascript";
    document.body.appendChild(script);
    setTime(callback, script);
  }
  //设置请求超时
  function setTime(callback, script) {
    if (timeOut !== undefined) {
      timeout_flag = setTimeout(function () {
        if (dataType === "jsonp") {
          delete window[callback];
          document.body.removeChild(script);

        } else {
          timeout_bool = true;
          xhr && xhr.abort();
        }
        timeOutFunc && timeOutFunc()
        console.log("timeout");

      }, timeOut);
    }
  }

  // XHR
  function createXHR() {
    //由于IE6的XMLHttpRequest对象是通过MSXML库中的一个ActiveX对象实现的。
    //所以创建XHR对象，需要在这里做兼容处理。
    function getXHR() {
      if (window.XMLHttpRequest) {
        return new XMLHttpRequest();
      } else {
        //遍历IE中不同版本的ActiveX对象
        var versions = ["Microsoft", "msxm3", "msxml2", "msxml1"];
        for (var i = 0; i < versions.length; i++) {
          try {
            var version = versions[i] + ".XMLHTTP";
            return new ActiveXObject(version);
          } catch (e) {}
        }
      }
    }
    //创建对象。
    xhr = getXHR();
    xhr.open(type, url, async);
    //设置请求头
    if (type === "post" && !contentType) {
      //若是post提交，则设置content-Type 为application/x-www-four-urlencoded
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");
    } else if (contentType) {
      xhr.setRequestHeader("Content-Type", contentType);
    }
    //添加监听
    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4) {
        if (timeOut !== undefined) {
          //由于执行abort()方法后，有可能触发onreadystatechange事件，
          //所以设置一个timeout_bool标识，来忽略中止触发的事件。
          if (timeout_bool) {
            return;
          }
          clearTimeout(timeout_flag);
        }
        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304) {

          success(xhr.responseText);
        } else {
          error(xhr.status, xhr.statusText);
        }
      }
    };
    //发送请求
    xhr.send(type === "get" ? null : data);
    setTime(); //请求超时
  }


  var url = options.url || "", //请求的链接
    type = (options.type || "get").toLowerCase(), //请求的方法,默认为get
    data = options.data || null, //请求的数据
    contentType = options.contentType || "", //请求头
    dataType = options.dataType || "", //请求的类型
    async = options.async === undefined ? true : options.async, //是否异步，默认为true.
    timeOut = options.timeOut, //超时时间。 
    timeOutFunc = options.timeOutFunc || function () {}, // 超时调用
    before = options.before || function () {}, //发送之前执行的函数
    error = options.error || function () {}, //错误执行的函数
    success = options.success || function () {}; //请求成功的回调函数
  var timeout_bool = false, //是否请求超时
    timeout_flag = null, //超时标识
    xhr = null; //xhr对角
  setData();
  before();
  if (dataType === "jsonp") {
    createJsonp();
  } else {
    createXHR();
  }
}

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = {"name":"raytheon","version":"1.3.0","description":"paotui applets && h5","main":"index.js","scripts":{"build:h5":"npm run dev:bef && taro build --type h5","dev:h5":"npm run dev:bef && taro build --type h5 --watch","build":"npm run dev:bef && taro build --type weapp","buildload":"cross-env webpack --config webpack/dload.config.js","dev":"npm run dev:bef && taro build --type weapp --watch","remove":"rm -rf \"./node_modules/@tarojs/cli/src/config\" && rm -rf \"./node_modules/@tarojs/webpack-runner/src/config\" && rm -rf \"./node_modules/@tarojs/taro-h5/dist/index.js\"","copy":"ncp \"./packages/taro-cli/src/config\" \"./node_modules/@tarojs/cli/src/config\" && ncp \"./packages/webpack-runner/src/\" \"./node_modules/@tarojs/webpack-runner/src/\"  && ncp \"./packages/taro-h5/index.js\" \"./node_modules/@tarojs/taro-h5/dist/index.js\"","dev:bef":"npm run remove && npm run copy","lint":"eslint ./src --cache --fix --ignore-pattern .gitignore","precommit-msg":"echo Pre-commit checking...please wait && exit 0","upload":"npm run build:h5 && npm run buildload && node ./bin/upload.js","upload:img":"node ./bin/uploadImg.js","deploy":"node ./bin/commander.js sp"},"author":"frontend@dianwoda","license":"MIT","dependencies":{"@tarojs/async-await":"^0.0.59","@tarojs/components":"^0.0.59","@tarojs/redux":"^0.0.59","@tarojs/router":"^0.0.59","@tarojs/taro":"^0.0.59","@tarojs/taro-h5":"^0.0.59","@tarojs/taro-weapp":"^0.0.59","babel-plugin-transform-object-assign":"^6.22.0","babel-polyfill":"^6.26.0","better-scroll":"^1.12.4","cross-env":"^5.2.0","fundebug-wxjs":"^0.6.1","inquirer":"^6.0.0","nerv-redux":"^1.2.18","nervjs":"^1.3.0","react-amap":"^1.2.7","react-dom":"^16.4.1","redux":"^4.0.0","redux-actions":"^2.3.0","redux-logger":"^3.0.6","redux-thunk":"^2.3.0","strip-loader":"^0.1.2","weixin-js-sdk":"^1.3.3"},"devDependencies":{"@tarojs/cli":"^0.0.59","@tarojs/plugin-babel":"^0.0.59","@tarojs/plugin-csso":"^0.0.59","@tarojs/plugin-sass":"^0.0.59","@tarojs/plugin-uglifyjs":"^0.0.59","@tarojs/webpack-runner":"^0.0.59","ali-cdn-sdk":"^1.2.0","ali-oss":"4.8.0","babel-eslint":"^8.2.3","babel-plugin-transform-class-properties":"^6.24.1","babel-plugin-transform-decorators-legacy":"^1.3.4","babel-plugin-transform-object-rest-spread":"^6.26.0","babel-preset-env":"^1.6.1","co":"^4.6.0","commander":"^2.16.0","eslint":"^4.19.1","eslint-config-taro":"^0.0.47","eslint-plugin-import":"^2.12.0","eslint-plugin-react":"^7.9.1","eslint-plugin-taro":"^0.0.48","fs-extra":"^7.0.0","ghooks":"^2.0.0","ncp":"^2.0.0","ora":"^3.0.0","os":"^0.1.1","prepare-commit-msg-dianwoda":"^0.2.1","validate-commit-msg":"^2.11.1"},"engines":{"node":">=7.6.0"},"config":{"validate-commit-msg":{"types":["feat","fix","docs","style","refactor","perf","test","chore","revert"],"warnOnFail":false,"maxSubjectLength":100,"subjectPattern":".+","subjectPatternErrorMsg":"subject does not match subject pattern!","helpMessage":""},"ghooks":{"pre-commit":"npm run precommit-msg && npm run lint","prepare-commit-msg":"prepare-commit-msg-dianwoda $2 $3","commit-msg":"validate-commit-msg"}}}

/***/ })
/******/ ]);